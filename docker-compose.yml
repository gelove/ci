version: "3"

services:
  mysql:
    image: mysql:${MYSQL_VERSION}
    container_name: mysql
    restart: always
    ports:
      - ${MYSQL_PORT}:3306
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - ${DATA_PATH_HOST}/mysql:/var/lib/mysql
    environment:
      - TZ=${WORKSPACE_TIMEZONE}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
  
  gogs:
    image: gogs/gogs
    container_name: gogs
    restart: always
    depends_on:
      - mysql
    ports:
      - ${GOGS_PORT}:3000
      - ${GOGS_SSH_PORT}:22
    volumes:
      - ${DATA_PATH_HOST}/gogs:/data
    environment:
      - TZ=${WORKSPACE_TIMEZONE}

  drone-server:
    image: drone/drone
    container_name: drone-server
    restart: always
    ports:
      - ${DRONE_PORT}:80
    volumes:
      - ${DATA_PATH_HOST}/drone:/var/lib/drone/
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - gogs
    environment:
      - TZ=${WORKSPACE_TIMEZONE}
      - DRONE_SERVER_HOST=drone-server
      - DRONE_SERVER_PROTO=http
      - DRONE_RPC_SECRET=${DRONE_RPC_SECRET}
      # 私有项目无需验证
      - DRONE_GIT_ALWAYS_AUTH=false
      # Gogs忽略SSL验证
      - DRONE_GOGS_SKIP_VERIFY=false
      # Gogs服务器地址
      - DRONE_GOGS_SERVER=http://gogs:3000
      # 数据库驱动 默认 sqlite3
      # - DRONE_DATABASE_DRIVER=sqlite3

  drone-agent:
    image: drone/agent
    container_name: drone-agent
    restart: always
    depends_on:
      - drone-server
    environment:
      - TZ=${WORKSPACE_TIMEZONE}
      - DRONE_DEBUG=${DRONE_DEBUG}
      - DRONE_RPC_SECRET=${DRONE_RPC_SECRET}
      - DRONE_RPC_SERVER=http://drone-server
      - DOCKER_HOST=tcp://docker-bind:2375

  docker-bind:
    # docker-in-docker dind
    image: docker:dind
    container_name: dind
    privileged: true
